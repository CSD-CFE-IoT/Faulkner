<launch>
  <arg name="model" default="burger"/>
  <param name="model" value="$(arg model)"/>
  
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>

  <arg name="des_x" default="4.0"/>
  <arg name="des_y" default="0.0"/>
  <arg name="max_lin_vel" default="0.3"/>
  <arg name="fix_yaw_ang_vel" default="0.2"/>
  <arg name="course_correct_ang_vel" default="0.05"/>
  <arg name="yaw_precision" default="0.174533"/> <!-- 10 degrees -->
  <arg name="course_correct_yaw_precision" default="0.0174533"/> <!-- 1 degrees -->
  <arg name="dist_precision" default="0.1"/>
  <arg name="scan_sector_size" default="0.628319"/> <!-- 36 degrees -->
  <arg name="avoidance_ang_vel_magnitude" default="0.3"/>
  <arg name="avoid_distance" default="0.5"/>
  <arg name="step_x" default="5" />
  <arg name="history_cap" default="5" />
  <arg name="yaw_oscillation_tolerance" default="1" />

  <arg name="dev" default="/dev/input/js0" />
  <arg name="joyType" default="xbox" />  <!-- possible values xbox,zerodelay-->
  <param name="joyType" value="$(arg joyType)"/>

  <param name="des_pos_x" value="$(arg des_x)" />
  <param name="des_pos_y" value="$(arg des_y)" />
  <param name="max_lin_vel" value="$(arg max_lin_vel)" />
  <param name="fix_yaw_ang_vel" value="$(arg fix_yaw_ang_vel)" />
  <param name="course_correct_ang_vel" value="$(arg course_correct_ang_vel)" />
  <param name="yaw_precision" value="$(arg yaw_precision)" />
  <param name="course_correct_yaw_precision" value="$(arg course_correct_yaw_precision)" />
  <param name="dist_precision" value="$(arg dist_precision)" />
  <param name="scan_sector_size" value="$(arg scan_sector_size)" />
  <param name="avoidance_ang_vel_magnitude" value="$(arg avoidance_ang_vel_magnitude)" />
  <param name="avoid_distance" value="$(arg avoid_distance)" />
  <param name="step_x" value="$(arg step_x)" />
  <param name="history_cap" value="$(arg history_cap)" />
  <param name="yaw_oscillation_tolerance" value="$(arg yaw_oscillation_tolerance)" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find faulkner)/worlds/faulknerBox"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <include file="$(find turtlebot3_fake)/launch/turtlebot3_fake.launch"/> 

  <!-- Joy Node -->
  <node respawn="true" pkg="joy" type="joy_node" name="turtle_joy">
    <param name="dev" type="string" value="$(arg dev)" />
    <param name="deadzone" value="0.12" />
  </node>

  <node pkg="faulkner" type="bug_master" name="bug_master"  output="screen" />
</launch>
